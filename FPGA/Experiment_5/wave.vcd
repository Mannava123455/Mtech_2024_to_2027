$date
	Thu Mar 27 15:58:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fir_filter_tb $end
$var wire 16 ! y [15:0] $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$var reg 16 $ x [15:0] $end
$scope module filter $end
$var wire 1 " clk $end
$var wire 16 % input_signal [15:0] $end
$var wire 1 # rst $end
$var reg 16 & acc [15:0] $end
$var reg 16 ' d_out [15:0] $end
$var reg 16 ( output_signal [15:0] $end
$var reg 16 ) temp [15:0] $end
$var integer 32 * count [31:0] $end
$var integer 32 + i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
b0 *
bx )
bx (
bx '
bx &
bx %
bx $
1#
0"
bx !
$end
#5000
b0 '
1"
#10000
0"
#15000
b1 *
b0 !
b0 (
b0 )
b0 &
b101 +
1"
b1 $
b1 %
0#
#20000
0"
#25000
b10 *
b1 !
b1 (
b1 &
b0 )
b101 +
1"
b10 $
b10 %
#30000
0"
#35000
b11 *
b100 !
b100 (
b0 )
b100 &
b101 +
1"
b11 $
b11 %
#40000
0"
#45000
b100 *
b1010 !
b1010 (
b0 )
b1010 &
b101 +
1"
b100 $
b100 %
#50000
0"
#55000
b101 *
b10100 !
b10100 (
b0 )
b10100 &
b101 +
1"
b101 $
b101 %
#60000
0"
#65000
b100011 !
b100011 (
b101 )
b100011 &
b101 +
1"
#70000
0"
#75000
b101100 !
b101100 (
b1010 )
b101100 &
b101 +
1"
#80000
0"
#85000
b101110 !
b101110 (
b1111 )
b101110 &
b101 +
1"
#90000
0"
#95000
b101000 !
b101000 (
b10100 )
b101000 &
b101 +
1"
#100000
0"
#105000
b11001 !
b11001 (
b11001 )
b11001 &
b101 +
1"
#110000
0"
#115000
b0 !
b0 (
b0 )
b0 &
b101 +
1"
#120000
0"
#125000
b101 +
1"
#130000
0"
#135000
b101 +
1"
